软件测试：
	软件测试是一种实际输出与预期输出之间的审核或者比较过程。
	检测被测对象是否满足用户需求，
功能测试：
	拿到这个需求，根据需求设计测试点，编写大纲用例，冒烟，用例评审，提bug，全部测完，主管这边发测试报告
软件测试的目的：
	1.发现被测对象与用户需求之间的差异，即缺陷
	2.通过测试活动发现并解决缺陷，增加人们对软件质量的信心
	3.通过测试活动了解被测对象的质量状况，为决策提供数据依据。
	4.通过测试活动积累经验，预防缺陷出现，降低产品失败风险
测试阶段分为：
	1.单元测试
	2.联调测试	
	3.接口测试
	4.系统测试（功能测试）
	5.验收测试
测试种类分为：
	1.功能测试2.接口测试3.自动化测试4.性能测试5.安全测试
测试结束的标准：
	1.所有用例执行完毕
	2.所有的bug修复并复测完毕

1.测试流程
	需求设计
	需求评审
	测试经理写测试计划
	测试人员写测试大纲
	测试人员写测试用例
	用例评审
	冒烟测试
	测试执行
	完成系统测试报告移交给业务UAT测试
	业务UAT测试完成后发UAT测试验收报告
	运维上线
	出现问题后，运维把问题反馈给开发和测试。
	测试进行复现定位问题，开发定位问题并修复。
	无问题后提交报告，运维发布修复版本上线。

2.各个测试名称含义
	阶段分为：
		单元测试-对软件中的最小可测试单元测试，比如开发好一个接口后测试。
		集成测试-在单元测试的基础上的，根据业务线把多个接口接起来测试。
		系统测试-软件开发基本完成后，对软硬件、兼容性、可靠性、安全性等整体测试。
		验收测试-测试人员测试完成后，移交给业务UAT验收测试。
	程序是否运行分为：
			静态测试-不运行进行走查（对代码技术要求高）
			动态测试-运行被测软件，检查实际输出结果和预期结果是否相符的过程。
	是否查看源代码分为：
		白盒测试-查看源代码查找错误
		黑盒测试（不需要查看代码）：
			功能测试：
				逻辑功能测试-检查逻辑是否正确。
				界面测试-验证软件用户界面的设计是否符合用户需求。
				易用性测试-从软件使用的合理性和方便性，是否有不方便用户使用的地方
				安装测试-测试是否能正常安装和卸载。
				兼容性测试-是否能兼容各个平台，正常运行	。
			性能测试：
				基准测试-测试系统各个事务的响应时间，对系统性能进行，基本测试。
				稳定性测试-测试系统运行时的稳定程度。
				负载测试-在压力范围内测试。
				压力测试-不断加压使直至被测系统压垮为止。
	其他：
		回归测试-在版本更迭过程中，不仅测试新功能正常运行，还需对老版本进行测试，保证新版本不影响老版本的功能。
		冒烟测试-测试软件的主流程是否正常。
		随机测试-又称猴子测试，测试中的数据都是随机生成的，用于模拟真实用户的情况，并发现一些边缘性的问题。
		返测-开发人员修复bug后，再进行一次验证。

测试环境：
	1.开发环境2.测试环境（ST测试环境，UAT测试环境，预上线测试环境）4.生产（线上或用户）环境
软件版本流转过程：开发环境—>测试环境（ST测试环境—>UAT测试环境—>预上线测试环境）—>生产环境

3.缺陷报告包含什么
	缺陷编号（提交缺陷的平台自动生成）
	缺陷标题（简要的描述缺陷）
	缺陷的发现者
	缺陷所属的模块
	发现缺陷的日期
	在哪个版本中发现的缺陷
	测试环境（机型、系统、环境）
	指派给谁进行处理
	缺陷的重现执行步骤
	
4.测试用例包含什么
	测试编号、测试目的（名称）、测试步骤、实际结果、预期结果、备注
测试用例的目的：
	1.记录测试进度
	2.规范测试流程
	3.防止测试遗漏

5.缺陷状态有哪几种
	新提交的缺陷——new
	打开的缺陷——open
	被拒绝的缺陷——rejected
	已经被修改的缺陷——fixed
	重新被打开的缺陷——reopen
	关闭的缺陷——close
6.缺陷的严重程度
	小的功能问题——low
	中等程度的功能问题——medium
	大的功能问题——high
	非常严重的功能问题——very high
缺陷报告的处理流程：
	1.测试人员提交确信
	2.开发人员验证此缺陷
	3.开发人员修改此缺陷
	4.缺陷修改完毕
	5.测试人员返测缺陷

	造成死机或影响开发，测试进度的问题——urgent
如果产品已经上线，出现了Bug怎么办？
	1.详细的记录并提出缺陷
	2.找到bug的复现路径
	3.同开发一起，定位bug的问题，是前端还是后端问题
	4.评估影响范围及修复难度
	5.做好总结和反思
如果产品即将上线，出现了Bug怎么办？
	1.找到开发协商，是否加班修复Bug
	2.请示项目负责人是否延长上线
	3.请示是否可以以后版本解决，先不上线此功能
	4.先进行上线，记录Bug后继续进行补丁修改

7.	（1）等价类划分 ：有效等价类和无效等价类
	（2）边界值法 	：在其他分类中套用边界值选取测试
	（3）场景法 	：基本流和备选流
	（4）因果图法 	：互斥、包含、唯一、要求、屏蔽
	（5）判定表法 	：直接分析输入和输出的关系
	（6）正交排列法	：多个控件and多种取值，相互组合
软件测试的生命周期：
	1.指定测试计划
	2.设计测试用例
	3.实施软件测试
	4.提交缺陷单
	5.测试报告
	6.版本发布

测试方向：1.安全性
	2.易用性
	3.兼容性
	4.稳定性
	5.功能性
	6.用户指南
8.因果法
	互斥（E）含义：
		表示a、b、c三个原因不会同时成立，最多有一个可以成立。
		a、b、c不同时为1，即a、b、c中至多只有有一个1。
	包含（C）含义：	
		表示a、b、c中至少有一个必须成立。
		a、b、c至少有一个1，即a、b、c中不能同时为0。
	唯一（O）含义：
		表示a、b、c中必须有一个成立，且仅有一个成立。
	要求（R）含义：
		表示当a出现时，b必须也出现。
		若a=1,则b必须为1.即不可能a=1且b=0。
	屏蔽（M）含义：
		若a=1,则b必须为0；而当a=0时，b的值不定。


	互斥和唯一的主要区别：
			互斥：程序选项没有默认值
			唯一：程序选项有默认值







